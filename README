PROJECT:		SlopeFEA (c) 2011 Brandon Karchewski
				Licensed under the Academic Free License version 3.0
					http://www.opensource.org/licenses/afl-3.0.php

CONTACT:		Brandon Karchewski
				Department of Civil Engineering
				McMaster University, JHE-301
				1280 Main St W
				Hamilton, Ontario, Canada
				L8S 4L7
				p: 905-525-9140 x24287
				f: 905-529-9688
				e: karcheba@mcmaster.ca


SOURCE INFORMATION:

The repository for this software project is hosted on git at:

		git://github.com/karcheba/SlopeFEA

As such, the code for the project is free and open source.
The relevant license is AFLv3 (see link above).

			
DESCRIPTION:

This project includes a set of specialized tools for numerical analysis
of problems in geotechnical engineering. The project began in the summer
of 2009 as a Matlab package for conducting slip circle analysis of slopes
consisting of horizontally layered material using Bishop's method [1],
the Rigid Finite Element Method (RFEM) [2], and both binary and continuous
parameter Genetic Algorithm minimization schemes [3,4,5]. Selected results
were presented at the 3rd Canadian Young Geotechnical Engineering &
Geoscientists Conference (cYGEGC) and a conference paper has also been
accepted to the 2011 Pan-Am CGS Geotechnical Conference [6].

During the summer of 2010 a graphical front-end for the project was initially
built using C++ and the Windows API. The GUI advanced the data input
capabilities of the project since it allowed more complex layering and
ground surface configurations to be drawn. During the fall and winter of
2010-2011 the project was rebuilt in C# making use of Microsoft's .NET
Framework v4 to simplify and enrich development of the user interface.

As of May 2011 the project continues to be developed for the purpose of
conducting numerical analysis as part of the author's M.A.Sc. thesis. Recent
additions are structured mesh generation tools for 4-noded quadrilateral and
3-noded triangular elements. Also included in these pre-processors are graphical
input of kinematic boundary conditions and natural boundary conditions (tractions).
Once these tools are complete, the main line of development will be the FEA
engine for analyzing the problems defined by the user input and generated mesh.
This component will be written in Fortran 90/95 and will be added to the
repository as it becomes available. Also planned for the near future of the
project are plotting tools for viewing the FEA output.

Note that this project is being developed primarily for the author's research
purposes and is not intended for community development. However, if you are
interested in further information about the project please contact the author
(see contact info above). For detailed information on the project's development
see the revision history below.


ACKNOWLEDGEMENTS:

The author would like to acknowledge:

-Natural Sciences and Engineering Research Council of Canada (NSERC) for their
support in the form of a series of USRA grants and an Alexander Graham Bell
CGS M scholarship.
-Dr. Dieter Stolle and Dr. Peijun Guo for their continued supervision and
provision of resources for the project.
-The Department of Civil Engineering at McMaster University for provision
of funding and resources.


REFERENCES:

[1]		Fredlund, D. and Krahn, J. 1977. "Comparison of slope stability methods of analysis," Canadian Geotechnical Journal, 25: 735-748.
[2]		Stolle, D. and Guo, P. 2008. "Limit equilibrium slope stability analysis using rigid finite elements," Canadian Geotechnical Journal, 45: 653-662.
[3]		Haupt, R. and Haupt, S. 1998.  Practical Genetic Algorithms, John Wiley and Sons, Inc., Toronto.
[4]		McCombie, P. and Wilkinson, P. 2002. "The use of the simple genetic algorithm in finding the critical factor of safety in slope stability analysis," Computers and Geotechnics, 29: 699-714.
[5]		Sengupta, A. and Upadhyay, A. 2005.  "An evolutionary algorithm for locating the critical failure surface in a soil slope," The Electronic Journal of Geotechnical Engineering, 10 (F).
[6]		Karchewski, B., Stolle, D., and Guo, P. 2011. "Determination of minimum factor of safety using a genetic algorithm and limit equilibrium analysis," 2011 Pan-Am CGS Geotechnical Conference.
[7]		Marshall, A., Morgan, J., and Schonfelder, J. 1997. "Fortran 90 Course Notes," The University of Liverpool. Available: http://www.liv.ac.uk/HPC/F90Course3DayHomePage.html
[8]		Marshall, A. 1997. "HPF Fortran Course Notes," The University of Liverpool. Available: http://www.liv.ac.uk/HPC/HPFCourse5DayHomePage.html


REVISION HISTORY:

[29 May 2011]

{Project initialization}
+++ Added project to git://github.com/karcheba/SlopeFEA.git

{v1.0.0.0}
+++ Added .gitignore file to ignore bin/ and obj/ directories

{v1.0.0.1}
+++ (CanvasData.cs) Added LoadX and LoadY modes to DrawModes enum
+++ (LoadX.ico) Created
+++ (LoadY.ico) Created
+++ (LoadX.cur) Created
+++ (LoadY.cur) Created
+++ (MainWindow.xaml) Added LoadX.cur and LoadY.cur as resources
+++ (MainWindow.xaml) Added Horizontal Load and Vertical Load MenuItems
+++ (MainWindow.xaml) Added Horizontal Load and Vertical Load ToolBar buttons
+++ (MainWindow.xaml.cs) Added loadX_Click() and loadY_Click()
+++ (SlopeCanvas.cs) Added LoadX and LoadY cases to OnMouseUp() [for switching cursor on middle mouse button pan]
=== (SlopeCanvas.cs) Changed DrawMode if statement series to equivalent switch-case in OnMouseLeftButtonUp(); this required duplicating one section of code (since C# does not allow "fall-through"), but the value of DrawMode need only be checked once as opposed to 10+ times
+++ (SlopeCanvas.cs) Added List<DrawingPoint> loadPoints and its associated initialization in the constructor
+++ (SlopeCanvas.cs) Added DrawModes.LoadX and DrawModes.LoadY cases to OnMouseLeftButtonUp()
+++ (CanvasData.cs) Added LineLoad class 
+++ (CanvasData.cs) Added LoadX() and LoadY() methods to MaterialBlock class


[30 May 2011]

{v1.0.0.2}
+++ (SlopeCanvas.cs) Added List<feSubstructs> FEASubstructs property and its associated initialization
+++ (MeshGen.cs) Added side effect of setting canvas.FEASubstructs to the generated list of substructures
+++ (FEA.cs) Added Parent property to fe4NodedQuadElement and fe3NodedTriElement to make these objects aware of their parent substructure
=== (MeshGen.cs) Modified calls to fe4NodedQuadElement() and fe3NodedTriElement() to include substruct as parent
+++ (MeshGen.cs) Added elimination of elements with centroid outside substructure in MeshGenStructured3NodedTri()
+++ (MeshGen.cs) Added element renumbering post-elimination in MeshGenStructured3NodedTri()

{v1.0.0.3}
--- (All code files) Cleaned up unused usings
+++ (All code files) Added project, contact, and license information [Academic Free License v3.0] at top of file

{v1.0.0.4}
+++ (AddLoadDialog.xaml) Created
--- (LoadX.ico) Removed
--- (LoadY.ico) Removed
+++ (PointLoad.ico) Created
+++ (LineLoad.ico) Created
--- (LoadX.cur) Removed
--- (LoadY.cur) Removed
+++ (PointLoad.cur) Created
+++ (LineLoad.cur) Created
=== (CanvasData.cs) Changed LoadX and LoadY to PointLoad and LineLoad in DrawModes
=== (MainWindow.xaml) Changed loadXCursor and loadYCursor to pointLoadCursor and lineLoadCursor
=== (MainWindow.xaml) Modified menu and toolbar entries for applying loads
--- (MainWindow.xaml.cs) Removed loadX_Click() and loadY_Click()
+++ (MainWindow.xaml.cs) Added pointLoad_Click() and lineLoad_Click()
=== (SlopeCanvas.cs) Changed LoadX and LoadY cases to PointLoad and LineLoad in OnMouseUp() for reverting middle mouse pan cursor
=== (CanvasData.cs, FEA.cs, CircularSurface.cs) Made a number of utility classes public
=== (SlopeCanvas.cs) Changed LoadX and LoadY cases to PointLoad and LineLoad in OnMouseLeftButtonUp()
=== (CanvasData.cs) Changed LoadX() and LoadY() to PointLoad() and LineLoad() in MaterialBlock class
+++ (CanvasData.cs) Added PointLoad and LineLoad draw modes to OnMouseLeftButtonDown() in DrawingPoint class


[31 May 2011]

{v1.0.0.5}
--- (AddLoadDialog.xaml, AddLoadDialog.xaml.cs) Removed
+++ (AddLineLoadDialog.xaml, AddLineLoadDialog.xaml.cs) Created
+++ (AddLineLoadDialog.xaml, AddLineLoadDialog.xaml.cs) Added functionality
+++ (CanvasData.cs) Added functionality to LineLoad class

{v1.0.0.6}
=== (AddLineLoadDialog.xaml) Changed X and Y load groups to N (normal) and T (tangential)
=== (CanvasData.cs) Changed X and Y load properties to N and T in LineLoad
--- (CanvasData.cs) Removed QuarterPoint plotting locations and associated Polylines from LineLoad [will only plot one normal and one tangential arrow at centre]
=== (AddLineLoadDialog.xaml.cs) Changed X and Y load actions to N and T
+++ (CanvasData.cs) Added Update() to LineLoad and dialog calling functionality to MaterialBlock.ApplyLineLoad()
+++ (AddLineLoadDialog.xaml.cs) Added Checked and Unchecked events for N and T checkboxes
+++ (CanvasData.cs) Added plotting of normal and tangential load arrows to LineLoad.Update()
+++ (CanvasData.cs) Added LineLoad.Update() to DrawingPoint.Move(), MaterialBlock.Translate(), and MaterialBlock.Zoom()
+++ (CanvasData.cs) Added Delete() to LineConstraint and LineLoad and added calls to both in MaterialBlock.Delete(); also added ClearFixLines() to DrawingPoint and added calls during MaterialBlock.Delete()
+++ (SlopeCanvas.cs) Added LineConstraints.FixLines and LineLoads.LoadLines to BuildAxes()
=== (AddLineLoadDialog.xaml.cs) Changed load units: "kN/mm" -> "kN/m" and "lbf/in" -> "lbf/ft"
+++ (SlopeCanvas.cs) Added LineLoads to UpdateUnits()
+++ (SlopeCanvas.cs) Added clearing of selections to DrawModes.FixX, DrawModes.FixY, and DrawModes.LineLoad in OnMouseLeftButtonUp()
+++ (SlopeCanvas.cs) Added LineLoads to SaveInputFile()
+++ (CanvasData.cs) Added unsave and unverify to MaterialBlock.ApplyLineLoad()
+++ (CanvasData.cs) Added LineLoads to OpenInputFile()
+++ (CanvasData.cs) Added check for existing line constraints and line loads to MaterialBlock.AddPoint() and DrawingPoint.Delete()
+++ (CanvasData.cs) Added PointLoad class
+++ (AddPointLoadDialog.xaml, AddPointLoadDialog.xaml.cs) Created
+++ (CanvasData.cs) Added functionality to MaterialBlock.ApplyPointLoad()
+++ (CanvasData.cs) Added PointLoad.Update() to DrawingPoint.Move(), MaterialBlock.Translate(), and MaterialBlock.Zoom()
=== (CanvasData.cs) Changed DrawingPoint.Delete() so that if parent material block or boundary has 2 or fewer points, all remaining points and the block will be deleted
+++ (CanvasData.cs) Added PointLoad.Delete() to DrawingPoint.Delete()
=== (CanvasData.cs) Modified SlopeBoundary.SortPoints() and MaterialBlock.SortPoints() since actual polygon points were not being sorted correctly with PointCollection.Reverse()
=== (CanvasData.cs) Modified LineLoad.Update() and PointLoad.Update() to indicate direction of loading


[01 June 2011]

{v1.0.0.7}
+++ (FEA.cs) Added feLineLoad class
+++ (FEA.cs) Added NLoads and TLoads and appropriate initializations to fe2NodedBoundElement class
=== (FEA.cs) Modified Nodes initialization in fe3NodedTriElement() and fe4NodedQuadElement() to a single line initialization instead of initialization followed by 3-4 calls to Add()
+++ (MeshGen.cs) Began adding creation of boundary elements from line loads in MeshGenStructured4NodedQuad()
+++ (MeshGen.cs) Completed creation of boundary elements from line loads in MeshGenStructured4NodedQuad()
+++ (FEA.cs) Added point load properties to feNode
+++ (FEA.cs) Created fePointLoad class
+++ (MeshGen.cs) Added indication of point loads at vertex nodes
+++ (SlopeCanvas.cs) Added loading of point load values to LoadFEA3NodedTriMesh() and LoadFEA4NodedQuadMesh()
+++ (CanvasData.cs) Added deletion of point loads to MaterialBlock.Delete()
+++ (SlopeCanvas.cs) Added updating of point loads to UpdateUnits()
+++ (SlopeCanvas.cs) Added plotting of point loads to BuildAxes()
=== (SlopeCanvas.cs) Modified order of plotting so that loads and fixities always get plotted on top
=== (CanvasData.cs) Modified LineLoad.Update() to plot three lines instead of just one
+++ (Multiple files) Added in-built NULL material; when this material is assigned to a block, the mesh generator skips the block


[02 June 2011]

{v1.0.0.8}
=== (AddLineLoadDialog.xaml, CanvasData.cs) Changed N load to +ve inward [i.e. tending toward CCW rotation]
=== (SlopeCanvas.cs) Changed draw order so that vertex nodes are drawn on top


[03 June 2011]

{v1.0.0.9}
+++ (Fortran Testing/) Added directory for Fortran 90/95 examples [after [7] and [8]]
+++ (*.for) Added tutorials completed previously, converted to fixed-format, and compiled with gfortran
=== (AddLineLoad.xaml, CanvasData.cs) Changed +ve direction for N loading back to outward [CW rotation about node 1]
+++ (Fortran Testing/) Continued working through [7], performing exercises along the way


[04-05 June 2011]

{v1.0.0.9}
+++ (Fortran Testing/) Continued working through [7], performing exercises along the way


[06 June 2011]

{v1.0.0.9}
+++ (LAPACK/) Built and tested reference BLAS and LAPACK
+++ (Fortran Testing/) Continued working through [7], performing exercises along the way


[07 June 2011]

{v1.0.0.9}
+++ (Fortran Testing/) Continued working through [7], performing exercises along the way